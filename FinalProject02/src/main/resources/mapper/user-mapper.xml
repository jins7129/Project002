<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.shuttle.model.dao.TBUserDao">

	<resultMap type="com.project.shuttle.model.dto.TBUserDto" id="userDto">
		<result property="userId" column="USER_ID" />
		<result property="userName" column="USER_NAME" />
		<result property="userPw" column="USER_PW" />
		<result property="userPhone" column="USER_PHONE" />
		<result property="userAddr" column="USER_ADDR" />
		<result property="userCoin" column="USER_COIN" />
		<result property="userStatus" column="USER_STATUS" />
		<result property="userImgpath" column="USER_IMGPATH" />
		<result property="userAccount" column="USER_ACCOUNT" />
		<result property="userBlockDate" column="USER_BLOCK_DATE" />
	</resultMap>

	<resultMap type="com.project.shuttle.model.dto.TBJobDto" id="boardDto">
		<result property="jobSeq" column="JOB_SEQ" />
		<result property="userId" column="USER_ID" />
		<result property="jobTitle" column="JOB_TITLE" />
		<result property="jobContent" column="JOB_CONTENT" />
		<result property="jobReward" column="JOB_REWARD" />
		<result property="jobAddr" column="JOB_ADDR" />
		<result property="jobCategory" column="JOB_CATEGORY" />
		<result property="jobComplete" column="JOB_COMPLETE" />
		<result property="jobDate" column="JOB_DATE" />
		<result property="jobStart" column="JOB_START" />
		<result property="jobDone" column="JOB_DONE" />
		<result property="jobView" column="JOB_VIEW" />
	</resultMap>


	<!-- 마이페이지안에서 사용될 쿼리문 -->
	<select id="getWrittenBoard" resultMap="boardDto">
		<![CDATA[
		SELECT * FROM (
		SELECT * FROM (
		SELECT ROWNUM RNM, JOB_SEQ, USER_ID, JOB_TITLE, JOB_CONTENT, JOB_REWARD, JOB_ADDR, JOB_CATEGORY, JOB_COMPLETE, JOB_DATE, JOB_START, JOB_DONE, JOB_VIEW
		FROM (SELECT * FROM TB_JOB WHERE USER_ID = #{userId} ORDER BY JOB_SEQ DESC)) 
		WHERE RNM <=#{pageCount}) 
		WHERE RNM >=#{pageNum}
		]]>	
	</select>
	
	<select id="getApplyBoard" resultMap="boardDto">
		<![CDATA[
		SELECT * FROM (
		SELECT * FROM (
		SELECT ROWNUM RNM, JOB_SEQ, USER_ID, JOB_TITLE, JOB_CONTENT, JOB_REWARD, JOB_ADDR, JOB_CATEGORY, JOB_COMPLETE, JOB_DATE, JOB_START, JOB_DONE, JOB_VIEW 
		FROM (SELECT * FROM TB_JOB WHERE JOB_SEQ IN (
		SELECT APPLY_SEQ FROM TB_APPLY WHERE APPLY_WOKER = #{userId}) ORDER BY JOB_SEQ DESC)) WHERE RNM <= #{pageCount}) WHERE RNM >= #{pageNum}
		]]>
	</select>
	
	<select id="getDoingBoard" resultMap="boardDto">
		<![CDATA[
		SELECT * FROM (
		SELECT * FROM (
		SELECT ROWNUM RNM, JOB_SEQ, USER_ID, JOB_TITLE, JOB_CONTENT, JOB_REWARD, JOB_ADDR, JOB_CATEGORY, JOB_COMPLETE, JOB_DATE, JOB_START, JOB_DONE, JOB_VIEW 
		FROM (SELECT * FROM TB_JOB WHERE USER_ID IN (
		SELECT USER_ID FROM TB_APPLY WHERE APPLY_WOKER = #{userId}) ORDER BY JOB_SEQ DESC)) WHERE RNM <= #{pageCount}) WHERE RNM >= #{pageNum}
		AND JOB_COMPLETE = 'D'
		]]>
	</select>
	
	<select id="getDoneBoard" resultMap="boardDto">
		<![CDATA[
		SELECT * FROM (
		SELECT * FROM (
		SELECT ROWNUM RNM, JOB_SEQ, USER_ID, JOB_TITLE, JOB_CONTENT, JOB_REWARD, JOB_ADDR, JOB_CATEGORY, JOB_COMPLETE, JOB_DATE, JOB_START, JOB_DONE, JOB_VIEW 
		FROM (SELECT * FROM TB_JOB WHERE USER_ID IN (
		SELECT USER_ID FROM TB_APPLY WHERE APPLY_WOKER = #{userId}) ORDER BY JOB_SEQ DESC)) WHERE RNM <= #{pageCount}) WHERE RNM >= #{pageNum}
		AND JOB_COMPLETE = 'Y'
		]]>
	</select>
	
	<select id="getReviewBoard" resultMap="boardDto">
		<![CDATA[
		SELECT * FROM (
		SELECT * FROM (
		SELECT ROWNUM RNM, JOB_SEQ, USER_ID, JOB_TITLE, JOB_CONTENT, JOB_REWARD, JOB_ADDR, JOB_CATEGORY, JOB_COMPLETE, JOB_DATE, JOB_START, JOB_DONE, JOB_VIEW 
		FROM (SELECT * FROM TB_JOB WHERE USER_ID IN (
		SELECT USER_ID FROM TB_APPLY WHERE APPLY_WOKER = #{userId}) ORDER BY JOB_SEQ DESC)) WHERE RNM <= #{pageCount}) WHERE RNM >= #{pageNum}
		AND JOB_COMPLETE = 'Y'
		]]>
	</select>
	
	<select id="countBoard" parameterType="String" resultType="int" >
		SELECT COUNT(*) FROM TB_JOB
		WHERE USER_ID = #{userId}
	</select>
	
	<select id="countApplyBoard" parameterType="String" resultType="int" >
		SELECT count(*) FROM TB_JOB WHERE JOB_SEQ IN (
		SELECT APPLY_SEQ FROM TB_APPLY WHERE APPLY_WOKER = #{userId}) ORDER BY JOB_SEQ DESC
	</select>
	
	<select id="countDoingBoard" parameterType="String" resultType="int">
		SELECT count(*) FROM TB_JOB 
		WHERE 
		USER_ID IN (SELECT USER_ID FROM TB_APPLY WHERE APPLY_WOKER = #{userId}) 
		AND 
		JOB_COMPLETE = 'D' ORDER BY JOB_SEQ DESC
	</select>
	
	<select id="countDoneBoard" parameterType="String" resultType="int">
		SELECT count(*) FROM TB_JOB 
		WHERE 
		USER_ID IN (SELECT USER_ID FROM TB_APPLY WHERE APPLY_WOKER = #{userId}) 
		AND 
		JOB_COMPLETE = 'Y' ORDER BY JOB_SEQ DESC
	</select>
	
	<select id="countReviewBoard" parameterType="String" resultType="int">
		SELECT count(*) FROM TB_JOB 
		WHERE 
		USER_ID IN (SELECT USER_ID FROM TB_APPLY WHERE APPLY_WOKER = #{userId}) 
		AND 
		JOB_COMPLETE = 'Y' ORDER BY JOB_SEQ DESC
	</select>
	
	<update id="kakaoUpdateBread" parameterType="com.project.shuttle.model.dto.TBUserDto" >
		UPDATE TB_USER SET
		USER_COIN = USER_COIN + #{userCoin}
		WHERE USER_ID = #{userId}
	</update>
	
	<update id="mypageUpdate" parameterType="com.project.shuttle.model.dto.TBUserDto" >
		UPDATE TB_USER SET
		USER_PHONE = #{userPhone},
		USER_ADDR = #{userAddr},
		USER_PW = #{userPw}
		WHERE USER_ID = #{userId}
	</update>	
	
	<update id="mypagePhotoUpdate" parameterType="com.project.shuttle.model.dto.TBUserDto">
		UPDATE TB_USER SET
		USER_IMGPATH = #{userImgpath}
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 로그인, 회원가입 쿼리문 -->
	<select id="login" parameterType="com.project.shuttle.model.dto.TBUserDto" resultMap="userDto">
		SELECT *
		FROM TB_USER
		WHERE USER_ID = #{userId}
		AND USER_PW = #{userPw}
	</select>
	
	<select id="idchk" parameterType="com.project.shuttle.model.dto.TBUserDto" resultType="String" >
		SELECT USER_ID FROM TB_USER 
		WHERE USER_ID = #{userId}
	</select>
	
	<insert id="insertUser" parameterType="com.project.shuttle.model.dto.TBUserDto">
	INSERT INTO TB_USER VALUES
	<!-- USER_ID, USER_NAME, USER_PW,USER_PHONE, USER_ADDR, USER_COIN, USER_STATUS, USER_ACCOUNT, USER_BLOCK_DATE -->
	(#{userId},#{userName},#{userPw},#{userPhone},#{userAddr}, 0, 'USER', 'www', 'empty',0)
	</insert>	
	

</mapper>
